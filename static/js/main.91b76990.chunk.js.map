{"version":3,"sources":["Theme.js","features/Cadencia/views/cadencia.jsx","features/Cadencia/cadenciaUtils.js","features/Cadencia/index.js","features/Checks/checksUtil.js","features/Checks/views/checkExecucao.jsx","features/Checks/views/gembaCheck.jsx","features/PlanoDeAcao/index.js","features/PlanoDeAcao/views/planoDeAcao.jsx","features/Membros/membrosUtils.js","features/Membros/views/membros.jsx","features/Membros/MembrosRepo.js","features/Membros/membrosManager.js","features/Squad.js","features/SquadRepo.js","features/OneOnOne/OneOnOneRepo.js","features/Okr/views/keyResult.jsx","features/Okr/okrUtils.js","features/Okr/views/okr.jsx","features/Okr/OkrRepo.js","App.js","features/OneOnOne/oneOnOneManager.js","serviceWorker.js","index.js"],"names":["createMuiTheme","palette","primary","main","secondary","error","typography","fontFamily","useNextVariants","estiloTitulo","fontSize","fontWeight","color","obterDataComFarol","data","dataVerificada","isValid","format","_i","verificaData","backgroundColor","verificada","dias","moment","diff","obterCorBackground","Typography","style","width","Cadencia","props","Grid","container","align","item","xs","squad","DataCheckArquitetural","DataCheckExecucao","DataRetroSquad","filtrarScores","tipo","Object","entries","filter","entry","includes","verificaScores","scores","scoresVerificados","forEach","score","isNaN","push","organizarCategorias","map","replace","obterDados","checkExecucao","categories","series","options","chart","height","type","background","dataLabels","enabled","plotOptions","radar","size","polygons","strokeColor","fill","colors","opacity","markers","xaxis","labels","show","yaxis","responsive","breakpoint","gembaCheck","PlanoDeAcao","withStyles","estilo","paddingBlockEnd","avatar","classes","membros","membro","plano","Box","key","display","flexDirection","justifyContent","p","Avatar","className","cor","numero","selecionafoto","foto","login","marcadorPlanoDeAcao","evento","corStatusOneOnOne","spacing","crafters","crafter","find","email","undefined","corStatus","border","src","Badge","overlap","anchororigin","vertical","horizontal","badgeContent","nome","util","require","request","requestPromise","promisify","method","url","headers","resultado","console","log","tratarMembros","membrosTSV","linha","body","split","cabecalhos","toLowerCase","obj","linhaAtual","j","length","i","Math","floor","random","corPlano","membrosParaObjetos","squads","todosMembros","reduce","acumulador","membrosSquad","resposta","Squad","planoDeAcao","marginBlockEnd","titulo","degrade","overflow","tituloPrincipal","padding","marginLeft","page","backgroundSize","backgroundImage","Cover","alignItems","response","lines","result","currentline","Number","axios","get","then","_","catch","keyResult","dataSet","chain","okr","pickBy","value","orderBy","obterDataSet","obterCategorias","target","Target","obterAlvo","values","obterValores","KeyResult","confianca","renderConfianca","Confianca","toolbar","legend","theme","mode","name","objectives","groupBy","okrs","agruparPorObjetivos","Container","maxWidth","HEADERS","App","state","index","play","handleChange","e","setState","handleClick","OneOnOneRepo","listarCuringas","craftersAPI","CraftersAPI","association","tribo","tribe","lider","leader","atrasado","isLate","Date","lastMeeting","SquadRepo","listarSquads","MembrosRepo","listarMembros","tsvMembros","membrosObjeto","OkrRepo","listarOkrs","this","timer","setInterval","newIndex","MuiThemeProvider","Theme","AppBar","position","Tabs","onChange","flexGrow","Tab","wrapped","label","variant","right","top","Paper","pageView","hidden","paddingBottom","Fab","bottom","onClick","fab","React","Component","borderRadius","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.91b76990.chunk.js","sourcesContent":["import { createMuiTheme } from \"@material-ui/core/styles\";\r\n\r\nexport default createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#504d94\"\r\n    },\r\n    secondary: {\r\n      main: \"#1c68b1\"\r\n    },\r\n    error: {\r\n      main: \"#e72372\"\r\n    }\r\n  },\r\n  typography: {\r\n    fontFamily: '\"Poppins\"',\r\n    useNextVariants: true\r\n  }\r\n});\r\n","import React from \"react\";\r\nimport { Grid, Typography } from \"@material-ui/core\";\r\nimport { obterCorBackground, verificaData } from \"../cadenciaUtils\";\r\n\r\nlet estiloTitulo = { fontSize: \"1.6rem\", fontWeight: 300, color: \"#ffffff\" };\r\n\r\nexport const cadencia = props => {\r\n  return (\r\n    <Grid container align=\"center\">\r\n      <Grid item xs={4}>\r\n        <Typography style={estiloTitulo}>Check Arquitetural</Typography>\r\n      </Grid>\r\n      <Grid item xs={4}>\r\n        <Typography style={estiloTitulo}>Check de Execução</Typography>\r\n      </Grid>\r\n      <Grid item xs={4}>\r\n        <Typography style={estiloTitulo}>Retro do Squad</Typography>\r\n      </Grid>\r\n      <Grid item xs={4}>\r\n        {obterDataComFarol(props.squad.DataCheckArquitetural)}\r\n      </Grid>\r\n      <Grid item xs={4}>\r\n        {obterDataComFarol(props.squad.DataCheckExecucao)}\r\n      </Grid>\r\n      <Grid item xs={4}>\r\n        {obterDataComFarol(props.squad.DataRetroSquad)}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nconst obterDataComFarol = data => {\r\n  let dataVerificada = verificaData(data);\r\n  let backgroundColor = obterCorBackground(data, dataVerificada);\r\n  return (\r\n    <Typography\r\n      style={{\r\n        width: \"80%\",\r\n        fontSize: \"3rem\",\r\n        fontWeight: 900,\r\n        backgroundColor: backgroundColor,\r\n        color: \"#ffffff\"\r\n      }}\r\n    >\r\n      {dataVerificada}\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport default cadencia;\r\n","import moment from \"moment\";\r\n\r\nconst obterCorBackground = (data, verificada) => {\r\n  const dias = moment().diff(data, \"days\");\r\n  let backgroundColor;\r\n  if (dias > 14) {\r\n    backgroundColor = \"#e95d6a\";\r\n  } else if (dias === 14) {\r\n    backgroundColor = \"#f6b26b\";\r\n  } else if (verificada === \"Escalado\") {\r\n    backgroundColor = \"#454545\";\r\n  } else {\r\n    backgroundColor = \"#57bb8a\";\r\n  }\r\n  return backgroundColor;\r\n};\r\n\r\nconst verificaData = data => {\r\n  if (data.isValid()) {\r\n    return data.format(\"DD/MM\");\r\n  } else if (data._i === \"Escalado\") {\r\n    return \"Escalado\";\r\n  } else {\r\n    return \"NOVO\";\r\n  }\r\n};\r\nexport { obterCorBackground, verificaData };\r\n","import Cadencia from \"./views/cadencia\";\r\n\r\nexport default Cadencia;\r\n","const filtrarScores = (props, tipo) => {\r\n  return Object.entries(props.squad).filter(entry => {\r\n    return entry[0].includes(tipo);\r\n  });\r\n};\r\n\r\nconst verificaScores = scores => {\r\n  let scoresVerificados = [];\r\n  scores.forEach(score => {\r\n    if (!isNaN(score[1])) {\r\n      scoresVerificados.push(score);\r\n    }\r\n  });\r\n  return scoresVerificados;\r\n};\r\n\r\nconst organizarCategorias = (scores, tipo) => {\r\n  return scores.map(entry => {\r\n    return entry[0].replace(tipo, \"\");\r\n  });\r\n};\r\n\r\nconst obterDados = scores => {\r\n  return scores.map(entry => {\r\n    return entry[1];\r\n  });\r\n};\r\n\r\nexport { filtrarScores, verificaScores, organizarCategorias, obterDados };\r\n","import React from \"react\";\r\nimport ReactApexCharts from \"react-apexcharts\";\r\nimport { filtrarScores, verificaScores, organizarCategorias, obterDados } from \"../checksUtil\";\r\n\r\nexport const checkExecucao = props => {\r\n  const scores = filtrarScores(props, \"ScoreCE\");\r\n  const scoresVerificados = verificaScores(scores);\r\n  const categories = organizarCategorias(scoresVerificados, \"ScoreCE\");\r\n  const data = obterDados(scoresVerificados);\r\n  return (\r\n    <ReactApexCharts\r\n      series={[\r\n        {\r\n          data: data\r\n        }\r\n      ]}\r\n      options={{\r\n        chart: {\r\n          height: 650,\r\n          width: \"100%\",\r\n          type: \"radar\",\r\n          background: \"rgba(41, 40, 61, 0)\"\r\n        },\r\n        dataLabels: {\r\n          enabled: true\r\n        },\r\n        plotOptions: {\r\n          radar: {\r\n            size: 165,\r\n            polygons: {\r\n              strokeColor: \"#e9e9e9\",\r\n              fill: {\r\n                colors: [\"#b0b0b020\"]\r\n              }\r\n            }\r\n          }\r\n        },\r\n        colors: [\"#004b94\"],\r\n        fill: {\r\n          colors: [\"#1f82e0\"],\r\n          opacity: 0.7\r\n        },\r\n        markers: {\r\n          size: 0,\r\n          colors: [\"#fff\"]\r\n        },\r\n        xaxis: {\r\n          categories: categories,\r\n          labels: {\r\n            show: true,\r\n            style: {\r\n              colors: [\"#ffffff\"],\r\n              fontSize: \"0.7rem\",\r\n              fontFamily: \"Poppins\"\r\n            }\r\n          }\r\n        },\r\n        yaxis: {\r\n          show: false\r\n        },\r\n        responsive: [\r\n          {\r\n            breakpoint: 1800,\r\n            options: {\r\n              plotOptions: {\r\n                radar: {\r\n                  size: 108,\r\n                  polygons: {\r\n                    strokeColor: \"#e9e9e9\",\r\n                    fill: {\r\n                      colors: [\"#b0b0b020\"]\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        ]\r\n      }}\r\n      type=\"radar\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default checkExecucao;\r\n","import React from \"react\";\r\nimport ReactApexCharts from \"react-apexcharts\";\r\nimport { filtrarScores, verificaScores, organizarCategorias, obterDados } from \"../checksUtil\";\r\n\r\nexport const gembaCheck = props => {\r\n  const scores = filtrarScores(props, \"ScoreGemba\");\r\n  const scoresVerificados = verificaScores(scores);\r\n  const categories = organizarCategorias(scoresVerificados, \"ScoreGemba\");\r\n  const data = obterDados(scoresVerificados);\r\n  return (\r\n    <ReactApexCharts\r\n      series={[\r\n        {\r\n          data: data\r\n        }\r\n      ]}\r\n      options={{\r\n        chart: {\r\n          height: 650,\r\n          width: \"100%\",\r\n          type: \"radar\",\r\n          background: \"rgba(41, 40, 61, 0)\"\r\n        },\r\n        dataLabels: {\r\n          enabled: true\r\n        },\r\n        plotOptions: {\r\n          radar: {\r\n            size: 165,\r\n            polygons: {\r\n              strokeColor: \"#e9e9e9\",\r\n              fill: {\r\n                colors: [\"#b0b0b020\"]\r\n              }\r\n            }\r\n          }\r\n        },\r\n        colors: [\"#004b94\"],\r\n        fill: {\r\n          colors: [\"#1f82e0\"],\r\n          opacity: 0.7\r\n        },\r\n        markers: {\r\n          size: 0,\r\n          colors: [\"#fff\"]\r\n        },\r\n        xaxis: {\r\n          categories: categories,\r\n          labels: {\r\n            show: true,\r\n            style: {\r\n              colors: [\"#ffffff\"],\r\n              fontSize: \"0.7rem\",\r\n              fontFamily: \"Poppins\"\r\n            }\r\n          }\r\n        },\r\n        yaxis: {\r\n          show: false\r\n        },\r\n        responsive: [\r\n          {\r\n            breakpoint: 1800,\r\n            options: {\r\n              plotOptions: {\r\n                radar: {\r\n                  size: 108,\r\n                  polygons: {\r\n                    strokeColor: \"#e9e9e9\",\r\n                    fill: {\r\n                      colors: [\"#b0b0b020\"]\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        ]\r\n      }}\r\n      type=\"radar\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default gembaCheck;\r\n","import PlanoDeAcao from \"./views/planoDeAcao\";\r\n\r\nexport default PlanoDeAcao;\r\n","import React from \"react\";\r\nimport { Typography, withStyles, Avatar, Box } from \"@material-ui/core\";\r\n\r\nexport const planoDeAcao = props => {\r\n  const { classes } = props;\r\n\r\n  const planosDeAcao = props.membros.map(membro => {\r\n    if (membro.plano) {\r\n      return (\r\n        <Box key={membro.plano} display=\"flex\" flexDirection=\"row\" justifyContent=\"center\">\r\n          <Box p={1} flexDirection=\"row\">\r\n            <Avatar className={classes.avatar} style={{ backgroundColor: membro.cor }}>\r\n              <Typography className={classes.numero}>♠</Typography>\r\n            </Avatar>\r\n          </Box>\r\n          <Box>\r\n            <Typography className={classes.typography}>{membro.plano}</Typography>\r\n          </Box>\r\n        </Box>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  });\r\n  return planosDeAcao;\r\n};\r\n\r\nconst styles = estilo => ({\r\n  typography: {\r\n    paddingBlockEnd: \"0.5em\",\r\n    fontSize: \"1.4rem\",\r\n    fontWeight: \"400\",\r\n    color: \"#ffffff\"\r\n  },\r\n  avatar: {\r\n    height: \"20px\",\r\n    width: \"20px\"\r\n  }\r\n});\r\n\r\nexport default withStyles(styles)(planoDeAcao);\r\n","import moment from \"moment\";\r\n\r\nconst corStatus = crafter => {\r\n  if (!crafter.data) {\r\n    return \"#1c68b1\";\r\n  }\r\n  const dias = moment().diff(moment(crafter.data), \"days\");\r\n  if (dias < 21) {\r\n    return \"#57bb8a\";\r\n  } else if (dias < 30) {\r\n    return \"#f6b26b\";\r\n  } else if (dias < 45) {\r\n    return \"#e95d6a\";\r\n  } else {\r\n    return \"#505050\";\r\n  }\r\n};\r\n\r\nconst corPlano = () => {\r\n  var hexadecimais = \"0123456789ABCDEF\";\r\n  var cor = \"#\";\r\n  for (var i = 0; i < 6; i++) {\r\n    cor += hexadecimais[Math.floor(Math.random() * 16)];\r\n  }\r\n  return cor;\r\n};\r\n\r\nconst selecionafoto = membro => {\r\n  if (membro.foto) {\r\n    return membro.foto;\r\n  } else {\r\n    return `./images/fotos/${membro.login}.JPG`;\r\n  }\r\n};\r\n\r\nexport { corStatus, corPlano, selecionafoto };\r\n","import React from \"react\";\r\nimport { Grid, Badge, Avatar, Typography, withStyles } from \"@material-ui/core\";\r\nimport EventAvailableIcon from \"@material-ui/icons/EventAvailableRounded\";\r\nimport { corStatus, selecionafoto } from \"../membrosUtils\";\r\n\r\nexport const membros = props => {\r\n  const { classes } = props;\r\n  let corStatusOneOnOne = \"#1c68b1\";\r\n\r\n  return (\r\n    <Grid container spacing={2} align=\"center\">\r\n      {props.membros.map(membro => {\r\n        if (props.crafters) {\r\n          const crafter = props.crafters.find(crafter => crafter.email.includes(membro.login));\r\n          if (crafter !== undefined) corStatusOneOnOne = corStatus(crafter);\r\n        }\r\n        let avatar = (\r\n          <Avatar\r\n            className={classes.avatar}\r\n            style={{\r\n              border: `8px solid ${corStatusOneOnOne}`,\r\n              backgroundColor: corStatusOneOnOne\r\n            }}\r\n            src={selecionafoto(membro)}\r\n          />\r\n        );\r\n        if (membro.plano) {\r\n          avatar = (\r\n            <Badge\r\n              overlap=\"circle\"\r\n              anchororigin={{\r\n                vertical: \"top\",\r\n                horizontal: \"right\"\r\n              }}\r\n              badgeContent={\r\n                <Avatar\r\n                  className={classes.marcadorPlanoDeAcao}\r\n                  style={{\r\n                    backgroundColor: membro.cor\r\n                  }}\r\n                >\r\n                  <EventAvailableIcon className={classes.evento} />\r\n                </Avatar>\r\n              }\r\n            >\r\n              {avatar}\r\n            </Badge>\r\n          );\r\n        }\r\n        return (\r\n          <Grid item xs={4} key={membro.login}>\r\n            {avatar}\r\n            <Typography className={classes.typography}>{membro.nome}</Typography>\r\n          </Grid>\r\n        );\r\n      })}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nconst styles = estilo => ({\r\n  typography: {\r\n    fontSize: \"1.6rem\",\r\n    fontWeight: 600,\r\n    color: \"#ffffff\"\r\n  },\r\n  marcadorPlanoDeAcao: {\r\n    height: \"3vw\",\r\n    width: \"3vw\"\r\n  },\r\n  evento: {\r\n    color: \"#ffffff\",\r\n    height: \"80%\",\r\n    width: \"80%\"\r\n  },\r\n  avatar: {\r\n    width: \"8vw\",\r\n    height: \"8vw\"\r\n  }\r\n});\r\n\r\nexport default withStyles(styles)(membros);\r\n","const util = require(\"util\");\r\nconst request = require(\"request\");\r\nconst requestPromise = util.promisify(request);\r\n\r\nclass MembrosRepo {\r\n  async listarMembros() {\r\n    try {\r\n      const options = {\r\n        method: \"GET\",\r\n        url:\r\n          \"https://docs.google.com/spreadsheets/d/e/2PACX-1vSpC_x6FOQi7QOG4-gFFZzgIp_BCHZEKLHy8PoJpA9twqOAsRVMUerK9BEhglaI92K58qjW4DOFFkMC/pub?gid=1877599560&single=true&output=tsv\",\r\n        headers: {}\r\n      };\r\n      const resultado = await requestPromise(options);\r\n      return resultado;\r\n    } catch (err) {\r\n      console.log(\"Erro no repositório de membros\", err);\r\n    }\r\n  }\r\n}\r\nexport default new MembrosRepo();\r\n","import { corPlano } from \"./membrosUtils\";\r\n\r\nconst tratarMembros = membrosTSV => {\r\n  const linha = membrosTSV.body.split(\"\\r\\n\");\r\n  const cabecalhos = linha[0].toLowerCase().split(\"\\t\");\r\n\r\n  const result = linha.map(item => {\r\n    const obj = {};\r\n    const linhaAtual = item.split(\"\\t\");\r\n    for (let j = 0; j < cabecalhos.length; j++) {\r\n      if (cabecalhos[j] === \"plano de ação\") cabecalhos[j] = \"plano\";\r\n      obj[cabecalhos[j]] = linhaAtual[j];\r\n    }\r\n    if (obj.plano) obj[\"cor\"] = corPlano();\r\n    return obj;\r\n  });\r\n  return result;\r\n};\r\n\r\nconst membrosParaObjetos = (squads, todosMembros) => {\r\n  return squads.reduce((acumulador, squad) => {\r\n    var membrosSquad = todosMembros.filter(resposta => resposta.squad.includes(squad.Squad));\r\n    if (membrosSquad.length) acumulador[squad.Squad] = membrosSquad;\r\n    return acumulador;\r\n  }, {});\r\n};\r\n\r\nexport { tratarMembros, membrosParaObjetos };\r\n","import React from \"react\";\r\nimport { withStyles, Typography, Grid } from \"@material-ui/core\";\r\nimport Cadencia from \"./Cadencia\";\r\nimport { GembaCheck, CheckExecucao } from \"./Checks\";\r\nimport PlanoDeAcao from \"./PlanoDeAcao\";\r\nimport { Membros } from \"./Membros\";\r\n\r\nexport const Squad = props => {\r\n  const { classes } = props;\r\n\r\n  return (\r\n    <div className={classes.page} style={{ backgroundImage: `url(${props.squad.Cover})` }}>\r\n      <div className={classes.degrade}>\r\n        <Typography className={classes.tituloPrincipal}>{props.squad.Squad}</Typography>\r\n        <Grid container spacing={4} alignItems=\"flex-start\">\r\n          <Grid item container xs={8} spacing={4} alignItems=\"flex-start\">\r\n            <Grid item xs={12}>\r\n              <Cadencia squad={props.squad} />\r\n            </Grid>\r\n\r\n            <Grid item xs={6} align=\"center\">\r\n              <Typography className={classes.titulo}>Gemba Check</Typography>\r\n              <GembaCheck squad={props.squad} />\r\n            </Grid>\r\n            <Grid item xs={6} align=\"center\">\r\n              <Typography className={classes.titulo}>Check de Execução</Typography>\r\n              <CheckExecucao squad={props.squad} />\r\n            </Grid>\r\n\r\n            <Grid item xs={12} align=\"center\">\r\n              <Typography className={classes.planoDeAcao}>Plano de Ação</Typography>\r\n              <PlanoDeAcao membros={props.membros} />\r\n              <Typography style={{ marginBlockEnd: \"300px\" }}> </Typography>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <Membros crafters={props.crafters} membros={props.membros} />\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  planoDeAcao: {\r\n    fontSize: \"2rem\",\r\n    fontWeight: 900,\r\n    color: \"#ffffff\",\r\n    marginBlockEnd: \"2%\"\r\n  },\r\n  titulo: {\r\n    fontSize: \"2rem\",\r\n    fontWeight: 900,\r\n    color: \"#ffffff\"\r\n  },\r\n  degrade: {\r\n    width: \"auto\",\r\n    height: \"auto\",\r\n    backgroundColor: \"#29283ddd\",\r\n    overflow: \"hidden\"\r\n  },\r\n  tituloPrincipal: {\r\n    padding: 16,\r\n    fontSize: \"2.2rem\",\r\n    fontWeight: 600,\r\n    color: \"#ffffff\",\r\n    marginLeft: \"2%\"\r\n  },\r\n  page: {\r\n    width: \"auto\",\r\n    height: \"auto\",\r\n    backgroundSize: \"cover\",\r\n    overflow: \"hidden\"\r\n  }\r\n};\r\n\r\nexport default withStyles(styles)(Squad);\r\n","import moment from \"moment\";\r\nconst util = require(\"util\");\r\nconst request = require(\"request\");\r\nconst requestPromise = util.promisify(request);\r\n\r\nclass SquadRepo {\r\n  async listarSquads() {\r\n    const options = {\r\n      method: \"GET\",\r\n      url:\r\n        \"https://docs.google.com/spreadsheets/d/e/2PACX-1vSpC_x6FOQi7QOG4-gFFZzgIp_BCHZEKLHy8PoJpA9twqOAsRVMUerK9BEhglaI92K58qjW4DOFFkMC/pub?gid=766563780&single=true&output=tsv\",\r\n      headers: {}\r\n    };\r\n    try {\r\n      const response = await requestPromise(options);\r\n      var lines = response.body.split(\"\\r\\n\");\r\n      var result = [];\r\n      var headers = lines[0].split(\"\\t\");\r\n\r\n      for (var i = 1; i < lines.length; i++) {\r\n        var obj = {};\r\n        var currentline = lines[i].split(\"\\t\");\r\n\r\n        for (var j = 0; j < headers.length; j++) {\r\n          if (headers[j].includes(\"Data\")) {\r\n            obj[headers[j]] = moment(currentline[j], \"DD/MM/YYYY\");\r\n          } else if (headers[j].includes(\"Score\")) {\r\n            obj[headers[j]] = Number(currentline[j].replace(\",\", \".\"));\r\n          } else {\r\n            obj[headers[j]] = currentline[j];\r\n          }\r\n        }\r\n\r\n        result.push(obj);\r\n      }\r\n\r\n      return result;\r\n    } catch (err) {\r\n      console.log(\"Erro no SquadRepo \", err);\r\n    }\r\n  }\r\n}\r\nexport default new SquadRepo();\r\n","import axios from \"axios\";\r\nimport * as _ from \"lodash\";\r\n\r\nclass OneOnOneRepo {\r\n  async listarCuringas() {\r\n    return axios\r\n      .get(`https://one-on-ones-dti.herokuapp.com/api/data_tribe?tribe=Curingas`)\r\n      .then(response => {\r\n        return _.filter(response.data.crafters, crafter => crafter.email !== \"leonardo.goncalves@dtidigital.com.br\");\r\n      })\r\n      .catch(error => {\r\n        console.log(`Erro na OneOnOne: ${error}`);\r\n      });\r\n  }\r\n}\r\n\r\nexport default new OneOnOneRepo();\r\n","import React from \"react\";\r\nimport { Typography, Grid } from \"@material-ui/core\";\r\nimport ReactApexCharts from \"react-apexcharts\";\r\nimport {\r\n  obterValores,\r\n  obterAlvo,\r\n  obterCategorias,\r\n  obterDataSet,\r\n  renderConfianca\r\n} from \"../okrUtils\";\r\n\r\nexport const keyResult = props => {\r\n  const dataSet = obterDataSet(props);\r\n  const categories = obterCategorias(dataSet);\r\n  const target = obterAlvo(dataSet, props);\r\n  const values = obterValores(dataSet);\r\n  return (\r\n    <Grid container>\r\n      <Grid item xs={10}>\r\n        <Typography\r\n          style={{ fontSize: \"1rem\", fontWeight: 300, color: \"#ffffff\" }}\r\n        >\r\n          {props.okr.KeyResult}\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={2}>\r\n        {renderConfianca(props.okr.Confianca)}\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <ReactApexCharts\r\n          options={{\r\n            chart: {\r\n              height: 20,\r\n              type: \"line\",\r\n              background: \"rgba(41, 40, 61, 0)\",\r\n              toolbar: { show: false }\r\n            },\r\n            colors: [\"#1c68b1\", \"#57bb8a\"],\r\n            fill: {\r\n              type: \"solid\",\r\n              opacity: [0.5, 1]\r\n            },\r\n            legend: { show: false },\r\n            theme: { mode: \"dark\" },\r\n            xaxis: {\r\n              categories: categories\r\n            }\r\n          }}\r\n          series={[\r\n            {\r\n              name: \"Okr\",\r\n              type: \"area\",\r\n              data: values\r\n            },\r\n            {\r\n              name: \"Meta\",\r\n              type: \"line\",\r\n              data: target\r\n            }\r\n          ]}\r\n          type=\"area\"\r\n          height={200}\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default keyResult;\r\n","import React from \"react\";\r\nimport SentimentSatisfiedIcon from \"@material-ui/icons/SentimentSatisfied\";\r\nimport SentimentDissatisfiedIcon from \"@material-ui/icons/SentimentDissatisfied\";\r\nimport SentimentVerySatisfiedIcon from \"@material-ui/icons/SentimentVerySatisfied\";\r\nimport { map, chain, groupBy } from \"lodash\";\r\nimport moment from \"moment\";\r\n\r\nconst obterValores = dataSet => {\r\n  return map(dataSet, data => data[1]);\r\n};\r\n\r\nconst obterAlvo = (dataSet, props) => {\r\n  return map(dataSet, () => props.okr.Target);\r\n};\r\n\r\nconst obterCategorias = dataSet => {\r\n  return map(dataSet, data => data[0].format(\"D/M\"));\r\n};\r\n\r\nconst obterDataSet = props => {\r\n  return chain(props.okr)\r\n    .pickBy((value, key) => key.includes(\"/\"))\r\n    .map((value, key) => [moment(key, \"DD/MM/YYYY\"), value])\r\n    .orderBy((value, key) => key)\r\n    .value();\r\n};\r\n\r\nconst renderConfianca = confianca => {\r\n  switch (confianca) {\r\n    case \"Baixa\":\r\n      return (\r\n        <SentimentDissatisfiedIcon\r\n          fontSize=\"large\"\r\n          style={{ color: \"#e95d6a\" }}\r\n        ></SentimentDissatisfiedIcon>\r\n      );\r\n    case \"Média\":\r\n      return (\r\n        <SentimentSatisfiedIcon\r\n          fontSize=\"large\"\r\n          style={{ color: \"#f6b26b\" }}\r\n        ></SentimentSatisfiedIcon>\r\n      );\r\n    case \"Alta\":\r\n      return (\r\n        <SentimentVerySatisfiedIcon\r\n          fontSize=\"large\"\r\n          style={{ color: \"#57bb8a\" }}\r\n        ></SentimentVerySatisfiedIcon>\r\n      );\r\n    default:\r\n      return (\r\n        <SentimentSatisfiedIcon\r\n          fontSize=\"large\"\r\n          style={{ color: \"#f6b26b\" }}\r\n        ></SentimentSatisfiedIcon>\r\n      );\r\n  }\r\n};\r\n\r\nconst agruparPorObjetivos = props => {\r\n  return groupBy(props.okrs, \"Objetivo\");\r\n};\r\n\r\nexport {\r\n  obterValores,\r\n  obterAlvo,\r\n  obterCategorias,\r\n  obterDataSet,\r\n  renderConfianca,\r\n  agruparPorObjetivos\r\n};\r\n","import React from \"react\";\r\nimport { Grid, Typography, Container } from \"@material-ui/core\";\r\nimport { map } from \"lodash\";\r\nimport KeyResult from \"./keyResult\";\r\nimport { agruparPorObjetivos } from \"../okrUtils\";\r\n\r\nexport const okr = props => {\r\n  const objectives = agruparPorObjetivos(props);\r\n\r\n  return (\r\n    <Container\r\n      maxWidth=\"xl\"\r\n      style={{\r\n        height: \"100%\"\r\n      }}\r\n    >\r\n      <Grid container style={{ padding: 16 }}>\r\n        {map(objectives, (value, key) => {\r\n          return (\r\n            <Grid container item xs={12} key={key} spacing={2}>\r\n              <Grid item xs={12}>\r\n                <Typography\r\n                  style={{\r\n                    fontSize: \"1.6rem\",\r\n                    fontWeight: 700,\r\n                    color: \"#ffffff\"\r\n                  }}\r\n                >\r\n                  {key}\r\n                </Typography>\r\n              </Grid>\r\n              {map(value, okr => (\r\n                <Grid item xs={6} key={okr.KeyResult}>\r\n                  <KeyResult okr={okr} />\r\n                </Grid>\r\n              ))}\r\n            </Grid>\r\n          );\r\n        })}\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default okr;\r\n","import axios from \"axios\";\r\n\r\nclass OkrRepo {\r\n  async listarOkrs() {\r\n    const options = {\r\n      HEADERS: {\r\n        \"Access-Control-Allow-Headers\": \"*\",\r\n        \"Access-Control-Allow-Origin\": \"*\"\r\n      }\r\n    };\r\n    return axios\r\n      .get(\r\n        `https://docs.google.com/spreadsheets/d/e/2PACX-1vSpC_x6FOQi7QOG4-gFFZzgIp_BCHZEKLHy8PoJpA9twqOAsRVMUerK9BEhglaI92K58qjW4DOFFkMC/pub?gid=1278116042&single=true&output=tsv`,\r\n        options\r\n      )\r\n      .then(response => {\r\n        var lines = response.data.split(\"\\r\\n\");\r\n\r\n        var result = [];\r\n        var headers = lines[0].split(\"\\t\");\r\n\r\n        for (var i = 1; i < lines.length; i++) {\r\n          var obj = {};\r\n          var currentline = lines[i].split(\"\\t\");\r\n\r\n          for (var j = 0; j < headers.length; j++) {\r\n            if (headers[j].includes(\"Target\") || headers[j].includes(\"/\")) {\r\n              if (currentline[j] === \"\") {\r\n                obj[headers[j]] = null;\r\n              } else {\r\n                obj[headers[j]] = Number(currentline[j].replace(\",\", \".\"));\r\n              }\r\n            } else {\r\n              obj[headers[j]] = currentline[j];\r\n            }\r\n          }\r\n\r\n          result.push(obj);\r\n        }\r\n\r\n        return result;\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n}\r\n\r\nexport default new OkrRepo();\r\n","import React from \"react\";\r\nimport { MuiThemeProvider, AppBar, Tabs, Tab, Fab, withStyles, Paper, Typography } from \"@material-ui/core\";\r\nimport { map } from \"lodash\";\r\nimport Theme from \"./Theme\";\r\nimport PauseButton from \"@material-ui/icons/Pause\";\r\nimport PlayButton from \"@material-ui/icons/PlayArrow\";\r\nimport Squad from \"./features/Squad\";\r\nimport SquadRepo from \"./features/SquadRepo\";\r\nimport { OneOnOneRepo, parseCrafter } from \"./features/OneOnOne\";\r\nimport { Okr, OkrRepo } from \"./features/Okr\";\r\nimport { MembrosRepo, tratarMembros, membrosParaObjetos } from \"./features/Membros\";\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    index: 0,\r\n    play: true\r\n  };\r\n\r\n  async UNSAFE_componentWillMount() {\r\n    const craftersAPI = await OneOnOneRepo.listarCuringas();\r\n    const crafters = parseCrafter(craftersAPI);\r\n    const squads = await SquadRepo.listarSquads();\r\n    const tsvMembros = await MembrosRepo.listarMembros();\r\n    const todosMembros = tratarMembros(tsvMembros);\r\n    const membrosObjeto = membrosParaObjetos(squads, todosMembros);\r\n\r\n    const okrs = await OkrRepo.listarOkrs();\r\n    this.setState({ squads: squads, membros: membrosObjeto, okrs: okrs, crafters: crafters });\r\n\r\n    this.timer = setInterval(() => {\r\n      if (this.state.play) {\r\n        const stateIndex = this.state.index + 1;\r\n        const squadsLengthPlus = this.state.squads.length + 1;\r\n        const newIndex = stateIndex % squadsLengthPlus;\r\n        this.setState({ index: newIndex });\r\n      }\r\n    }, 30 * 1000);\r\n  }\r\n\r\n  handleChange = (e, value) => {\r\n    this.setState({ index: value });\r\n  };\r\n  handleClick = () => {\r\n    this.setState({ play: !this.state.play });\r\n  };\r\n\r\n  render() {\r\n    const { index, squads, crafters, okrs, membros } = this.state;\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <MuiThemeProvider theme={Theme}>\r\n        <AppBar position=\"static\">\r\n          <Tabs value={index} onChange={this.handleChange} style={{ flexGrow: 1 }}>\r\n            {map(squads, (squad, i) => {\r\n              return <Tab wrapped key={squad.Squad} label={squad.Squad} value={i} />;\r\n            })}\r\n            {okrs && squads && <Tab wrapped key=\"okr\" label=\"Okrs\" value={squads.length} />}\r\n          </Tabs>\r\n          <Typography variant=\"overline\" style={{ position: \"absolute\", right: \"16px\", top: \"24px\" }}></Typography>\r\n        </AppBar>\r\n        {// Só será executado quando o state membros estiver inicializado... Garantindo que a será enviado a props na ordem correta\r\n        this.state.membros &&\r\n          map(squads, (squad, i) => {\r\n            return (\r\n              <Paper className={classes.pageView} hidden={index !== i} key={squad.Squad}>\r\n                <Squad squad={squad} crafters={crafters} membros={membros[squad.Squad]} />\r\n              </Paper>\r\n            );\r\n          })}\r\n        {squads && okrs && (\r\n          <Paper\r\n            style={{\r\n              // Scroll ativo\r\n              width: \"auto\",\r\n              height: \"auto\",\r\n              backgroundColor: \"#29283ddd\",\r\n              overflow: \"hidden\",\r\n              paddingBottom: \"7%\"\r\n            }}\r\n            hidden={index < squads.length}\r\n            key={\"okr\"}\r\n          >\r\n            <Okr okrs={okrs} />\r\n          </Paper>\r\n        )}\r\n\r\n        <Fab\r\n          style={{ position: \"fixed\", bottom: \"10px\", right: \"10px\" }}\r\n          onClick={this.handleClick}\r\n          className={classes.fab}\r\n          color=\"secondary\"\r\n        >\r\n          {this.state.play ? <PauseButton style={{ color: \"#ffffff\" }} /> : <PlayButton style={{ color: \"#ffffff\" }} />}\r\n        </Fab>\r\n      </MuiThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = theme => ({\r\n  fab: {\r\n    position: \"absolute\",\r\n    bottom: theme.spacing(2),\r\n    right: theme.spacing(2)\r\n  },\r\n  pageView: {\r\n    height: `calc(100vh - 48px)`,\r\n    backgroundColor: \"#29283d\",\r\n    borderRadius: 0\r\n  }\r\n});\r\n\r\nexport default withStyles(styles)(App);\r\n","const parseCrafter = CraftersAPI => {\r\n  if (CraftersAPI) {\r\n    const crafter = CraftersAPI.map(crafter => {\r\n      if (crafter.association) {\r\n        return {\r\n          tribo: crafter.tribe,\r\n          nome: crafter.name,\r\n          email: crafter.email,\r\n          lider: crafter.association.leader,\r\n          atrasado: crafter.association.isLate,\r\n          data: new Date(crafter.association.lastMeeting)\r\n        };\r\n      } else {\r\n        return {\r\n          tribo: crafter.tribe,\r\n          nome: crafter.name,\r\n          email: crafter.email,\r\n          lider: null,\r\n          atrasado: null,\r\n          data: null\r\n        };\r\n      }\r\n    });\r\n    return crafter;\r\n  } else {\r\n    console.log(`Repositorio de OneOnOne's está fora do ar`);\r\n    return null;\r\n  }\r\n};\r\n\r\nexport { parseCrafter };\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}